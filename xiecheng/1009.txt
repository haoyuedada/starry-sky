import React, {useState, useRef} from 'react';
import {
  View,
  Text,
  TouchableOpacity,
  SectionList,
  StyleSheet,
  Image,
  Dimensions,
  ScrollView,
} from 'react-native';

// 示例数据
const DATA = [
  {
    title: 'Section 1',
    data: [
      'Item 1-1',
      'Item 1-2',
      'Item 1-3',
      'Item 1-4',
      'Item 1-5',
      'Item 1-6',
      'Item 1-7',
      'Item 1-8',
      'Item 1-9',
      'Item 1-10',
      'Item 1-11',
      'Item 1-12',
      'Item 1-13',
      'Item 1-14',
      'Item 1-15',
      'Item 1-16',
      'Item 1-17',
      'Item 1-18',
      'Item 1-19',
      'Item 1-20',
      'Item 1-21',
      'Item 1-22',
      'Item 1-23',
      'Item 1-24',
      'Item 1-25',
      'Item 1-26',
      'Item 1-27',
      'Item 1-28',
      'Item 1-29',
      'Item 1-30',
      'Item 1-31',
      'Item 1-32',
      'Item 1-33',
      'Item 1-34',
      'Item 1-35',
      'Item 1-36',
      'Item 1-37',
      'Item 1-38',
      'Item 1-39',
      'Item 1-40',
      'Item 1-41',
      'Item 1-42',
      'Item 1-43',
      'Item 1-44',
      'Item 1-45',
      'Item 1-46',
      'Item 1-47',
      'Item 1-48',
      'Item 1-49',
      'Item 1-50',
      'Item 1-51',
      'Item 1-52',
      'Item 1-53',
      'Item 1-54',
      'Item 1-55',
      'Item 1-56',
      'Item 1-57',
      'Item 1-58',
      'Item 1-59',
      'Item 1-60',
      'Item 1-61',
      'Item 1-62',
      'Item 1-63',
      'Item 1-64',
      'Item 1-65',
      'Item 1-66',
      'Item 1-67',
      'Item 1-68',
      'Item 1-69',
      'Item 1-70',
      'Item 1-71',
      'Item 1-72',
      'Item 1-73',
      'Item 1-74',
      'Item 1-75',
      'Item 1-76',
      'Item 1-77',
      'Item 1-78',
    ],
  },
  {
    title: 'Section 2',
    data: [
      'Item 2-1',
      'Item 2-2',
      'Item 2-3',
      'Item 2-4',
      'Item 2-5',
      'Item 2-6',
      'Item 2-7',
      'Item 2-8',
      'Item 2-9',
      'Item 2-10',
      'Item 2-11',
      'Item 2-12',
      'Item 2-13',
      'Item 2-14',
      'Item 2-15',
      'Item 2-16',
      'Item 2-17',
      'Item 2-18',
      'Item 2-19',
      'Item 2-20',
      'Item 2-21',
      'Item 2-22',
      'Item 2-23',
      'Item 2-24',
      'Item 2-25',
      'Item 2-26',
      'Item 2-27',
      'Item 2-28',
      'Item 2-29',
      'Item 2-30',
      'Item 2-31',
      'Item 2-32',
      'Item 2-33',
      'Item 2-34',
      'Item 2-35',
      'Item 2-36',
      'Item 2-37',
      'Item 2-38',
      'Item 2-39',
      'Item 2-40',
      'Item 2-41',
      'Item 2-42',
      'Item 2-43',
      'Item 2-44',
      'Item 2-45',
      'Item 2-46',
      'Item 2-47',
      'Item 2-48',
      'Item 2-49',
      'Item 2-50',
      'Item 2-51',
      'Item 2-52',
      'Item 2-53',
      'Item 2-54',
      'Item 2-55',
      'Item 2-56',
      'Item 2-57',
      'Item 2-58',
      'Item 2-59',
      'Item 2-60',
      'Item 2-61',
      'Item 2-62',
      'Item 2-63',
      'Item 2-64',
      'Item 2-65',
      'Item 2-66',
      'Item 2-67',
      'Item 2-68',
      'Item 2-69',
      'Item 2-70',
      'Item 2-71',
      'Item 2-72',
      'Item 2-73',
      'Item 2-74',
      'Item 2-75',
      'Item 2-76',
      'Item 2-77',
      'Item 2-78',
      'Item 2-79',
      'Item 2-80',
      'Item 2-81',
      'Item 2-82',
    ],
  },
  {
    title: 'Section 3',
    data: [
      'Item 3-1',
      'Item 3-2',
      'Item 3-3',
      'Item 3-4',
      'Item 3-5',
      'Item 3-6',
      'Item 3-7',
      'Item 3-8',
      'Item 3-9',
      'Item 3-10',
      'Item 3-11',
      'Item 3-12',
      'Item 3-13',
      'Item 3-14',
      'Item 3-15',
      'Item 3-16',
      'Item 3-17',
      'Item 3-18',
      'Item 3-19',
      'Item 3-20',
      'Item 3-21',
      'Item 3-22',
      'Item 3-23',
      'Item 3-24',
      'Item 3-25',
      'Item 3-26',
      'Item 3-27',
      'Item 3-28',
      'Item 3-29',
      'Item 3-30',
      'Item 3-31',
      'Item 3-32',
      'Item 3-33',
      'Item 3-34',
      'Item 3-35',
      'Item 3-36',
      'Item 3-37',
      'Item 3-38',
      'Item 3-39',
      'Item 3-40',
      'Item 3-41',
      'Item 3-42',
      'Item 3-43',
      'Item 3-44',
      'Item 3-45',
      'Item 3-46',
      'Item 3-47',
      'Item 3-48',
      'Item 3-49',
      'Item 3-50',
      'Item 3-51',
      'Item 3-52',
      'Item 3-53',
      'Item 3-54',
      'Item 3-55',
      'Item 3-56',
      'Item 3-57',
      'Item 3-58',
      'Item 3-59',
      'Item 3-60',
      'Item 3-61',
      'Item 3-62',
      'Item 3-63',
      'Item 3-64',
      'Item 3-65',
      'Item 3-66',
      'Item 3-67',
      'Item 3-68',
      'Item 3-69',
      'Item 3-70',
      'Item 3-71',
      'Item 3-72',
      'Item 3-73',
      'Item 3-74',
      'Item 3-75',
      'Item 3-76',
      'Item 3-77',
    ],
  },
];

const App = () => {
  const [selectedSectionIndex, setSelectedSectionIndex] = useState(0);
  const sectionListRef = useRef(null);
  const [dataList, setDataList] = useState(DATA[0].data);

  const scrollToSection = (index) => {
    setSelectedSectionIndex(index);
    setDataList([]);
    setTimeout(() => {
      setDataList(DATA[index].data);
    }, 500);
  };

  // 根据选中部分来过滤数据
  let filteredData =
    selectedSectionIndex !== null ? [DATA[selectedSectionIndex]] : DATA;
  filteredData = [
    {
      title: 'tab',
      data: ['tab'],
    },
  ].concat(filteredData);

  return (
    <View style={styles.container}>
      <SectionList
        stickySectionHeadersEnabled={true}
        ListHeaderComponent={() => {
          return (
            <View>
              <Image
                width={Dimensions.get('window').width}
                height={200}
                source={{
                  uri: 'http://c.hiphotos.baidu.com/image/pic/item/9c16fdfaaf51f3de1e296fa390eef01f3b29795a.jpg',
                }}></Image>
            </View>
          );
        }}
        renderSectionHeader={({section: {title}}) => {
          if (title === 'tab') {
            return (
              <View style={styles.tabContainer}>
                <ScrollView
                  style={{
                    height: 100,
                    backgroundColor: 'pink',
                    width: Dimensions.get('window').width,
                  }}
                  horizontal>
                  {DATA.map((section, index) => (
                    <TouchableOpacity
                      key={section.title}
                      style={styles.tab}
                      onPress={() => scrollToSection(index)}>
                      <Text style={styles.tabText}>{section.title}</Text>
                    </TouchableOpacity>
                  ))}
                </ScrollView>
              </View>
            );
          } else {
            return null;
          }
        }}
        renderItem={({item}) => {
          if (item == 'tab') {
            if (dataList.length > 0) {
              {
                return dataList?.map((title) => {
                  return (
                    <View style={styles.item}>
                      <Text>{title}</Text>
                    </View>
                  );
                });
              }
            } else {
              return <View style={{minHeight: 2000}}></View>;
            }
          } else {
            return null;
          }
        }}
        ref={sectionListRef}
        sections={filteredData}
        keyExtractor={(item, index) => item + index}
      />
    </View>
  );
};
const styles = StyleSheet.create({
  container: {
    flex: 1,
    marginTop: 50,
  },
  tabContainer: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    backgroundColor: '#f8f8f8',
    paddingVertical: 10,
    position: 'relative',
  },
  tab: {
    marginLeft: 10,
    width: 300,
    backgroundColor: 'orange',
  },
  tabText: {
    fontSize: 16,
    fontWeight: 'bold',
  },
  item: {
    padding: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#ccc',
  },
  header: {
    padding: 10,
    backgroundColor: '#eee',
  },
  headerText: {
    fontSize: 18,
    fontWeight: 'bold',
  },
});

export default App;