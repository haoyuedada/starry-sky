            <View style={styles.box}>
                <Text style={{ padding: 3 }, styles.title}>8.accessibilityState</Text>
                <Text style={{ padding: 3 }}></Text>
                <Text style={{ padding: 3 }}>预期效果：向辅助技术的用户描述组件的当前状态。</Text>
                <View>
                    <Text>属性值：accessibilityState={"{{ 'disabled': true }}"}</Text>
                    <Text>预期效果:点击文本内容后，提示“text one 不可点击”</Text>
                    <Text>实际效果:</Text>
                    <View
                        style={{
                            flex: 1,
                            borderWidth: 5,
                            borderColor: '#527FE4'
                        }}
                        accessible={true}
                        accessibilityState={{ 'disabled': true }}
                    >
                        <Text>text one</Text>
                    </View>
                </View>
                <View style={{ marginTop: 10 }}>
                    <Text>属性值：accessibilityState={"{{ 'selected': true }}"}</Text>
                    <Text>预期效果:点击文本内容后，提示“已选中 text one”</Text>
                    <Text>实际效果:</Text>
                    <View
                        style={{
                            flex: 1,
                            borderWidth: 5,
                            borderColor: '#527FE4'
                        }}
                        accessible={true}
                        accessibilityState={{ 'selected': true }}
                    >
                        <Text>text one</Text>
                    </View>
                </View>
                <View style={{ marginTop: 10 }}>
                    <Text>属性值：accessibilityState={"{{ 'checked': true }}"}</Text>
                    <Text>预期效果:点击文本内容后，提示“已选中 text one”</Text>
                    <Text>实际效果:</Text>
                    <View
                        style={{
                            flex: 1,
                            borderWidth: 5,
                            borderColor: '#527FE4'
                        }}
                        accessible={true}
                        accessibilityState={{ 'checked': true }}
                    >
                        <Text>text one</Text>
                    </View>
                </View>
                <View style={{ marginTop: 10 }}>
                    <Text>属性值：accessibilityState={"{{ 'busy': true }}"}</Text>
                    <Text>预期效果:点击文本内容后提示，busy</Text>
                    <Text>实际效果:</Text>
                    <View
                        style={{
                            flex: 1,
                            borderWidth: 5,
                            borderColor: '#527FE4'
                        }}
                        accessible={true}
                        accessibilityState={{ 'busy': true }}
                    >
                        <Text>text one</Text>
                    </View>
                </View>
                <View style={{ marginTop: 10 }}>
                    <Text>属性值：accessibilityState={"{{ 'expanded': true }}"}</Text>
                    <Text>预期效果:点击文本内容过后提示，“已展开 text one”</Text>
                    <Text>实际效果:</Text>
                    <View
                        style={{
                            flex: 1,
                            borderWidth: 5,
                            borderColor: '#527FE4'
                        }}
                        accessible={true}
                        accessibilityState={{ 'expanded': true }}
                    >
                        <Text>text one</Text>
                    </View>
                </View>

            </View>
=============================================================
      <TestSuite name="accessibilityRole">
        <TestCase.Example itShould="announce text specified in the appropriate column">
          <View style={{padding: 16, flexDirection: 'row', width: '100%'}}>
            <Text style={{width: '33%', fontWeight: 'bold'}}>Role</Text>
            <Text style={{width: '33%', fontWeight: 'bold'}}>Android</Text>
            <Text style={{width: '33%', fontWeight: 'bold'}}>Harmony</Text>
          </View>
          {Array.from(
            ANNOUNCEMENT_BY_PLATFORM_BY_ACCESSIBILITY_ROLE.entries(),
          ).map(([role, {android, harmony}]) => {
            return (
              <View
                key={role}
                accessible
                accessibilityRole={role}
                style={{
                  padding: 16,
                  flexDirection: 'row',
                  width: '100%',
                  borderBottomWidth: 1,
                  borderColor: 'silver',
                }}>
                <Text style={{width: '33%'}} importantForAccessibility="no">
                  {role}
                </Text>
                <Text style={{width: '33%'}} importantForAccessibility="no">
                  {android}
                </Text>
                <Text style={{width: '33%'}} importantForAccessibility="no">
                  {harmony}
                </Text>
              </View>
            );
          })}
        </TestCase.Example>
      </TestSuite>
===============================================================
    const [firstChecked, setFirstChecked] = useState < boolean > (false);
    const [secondChecked, setSecondChecked] = useState < boolean > (false);
    const checked = firstChecked && secondChecked;
    const mixed = firstChecked !== secondChecked;

            <View
                accessible={true}
                aria-checked={checked ? true : mixed ? 'mixed' : false}
                style={styles.box}
                accessibilityRole="checkbox"
                accessibilityState={{ checked }}>
                <Text style={{ padding: 3 }, styles.title}>7.accessibilityRole</Text>
                <Text style={{ padding: 3 }}>属性值：checkbox</Text>
                <Text style={{ padding: 3 }}>预期效果：让屏幕阅读器显示:当两个按钮都被选中时，显示'checked, mixed';当一个按钮被选中时，显示'mixed';当一个按钮都没有被选中时，显示'unchecked'。</Text>
                <Button
                    title={`第一个 ${firstChecked ? '选中了' : '没选中'}`}
                    onPress={() => setFirstChecked(!firstChecked)}
                />
                <Button
                    title={`第二个 ${secondChecked ? '选中了' : '没选中'}`}
                    onPress={() => setSecondChecked(!secondChecked)}
                />
            </View>
===============================================================



const styles = StyleSheet.create({
    container: {
        padding: 20,
        marginBottom: 30,
        // backgroundColor: '#fff',
    },
    title: {
        fontSize: 18
    },
    box: {
        height: 'auto',
        marginBottom: 30,
        padding: 10,
        borderWidth: 2,
        borderColor: '#c1c1c1',
        borderRadius: 10,
        backgroundColor: '#fff'
    },
    squaresContainer: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        backgroundColor: 'gray',
    },
    square: {
        width: 100,
        height: 100,
        backgroundColor: 'lightblue',
        margin: 4,
    },
    squareContent: {
        textAlignVertical: 'center',
        textAlign: 'center',
        height: '100%',
    },
    accessibilityContainer: {
        width: '100%',
        backgroundColor: 'gray',
    },
    accessibilityLayout: {
        width: '100%',
        height: 100,
        backgroundColor: 'lightblue',
    },
    gridContainer: {
        flexDirection: 'row',
        flexWrap: 'wrap',
        justifyContent: 'center',
        alignItems: 'center',
        gap: 10,
    },
    gridContainerSquare: {
        width: 150,
        height: 150,
        backgroundColor: 'lightblue',
        margin: 4,
    },
});